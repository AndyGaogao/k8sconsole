package main

import (
	"github.com/spf13/pflag"
	authApi "github.com/wzt3309/k8sconsole/src/app/backend/auth/api"
	"net"
)

var (
	argInsecurePort        = pflag.Int("insecure-port", 8080, "The port to listen to for incoming HTTP requests.")
	argPort                = pflag.Int("port", 8443, "The port to listen to for incoming HTTPS requests.")
	argInsecureBindAddress = pflag.IP("insecure-bind-address", net.IPv4(127, 0, 0, 1), "The IP address on which to serve the --insecure-port (set to 0.0.0.0 for all interfaces).")
	argBindAddress         = pflag.IP("insecure-bind-address", net.IPv4(0, 0, 0, 0), "The IP address on which to serve the --port (set to 0.0.0.0 for all interfaces).")

	argApiServerHost = pflag.String("apiserver-host", "", "The address of kubernetes apiserver to connect to in the format of protocol://address:port, e.g. http://localhost:8080."+
		"If not specified, the assumption is that k8sconsole binary runs inside a kubernetes cluster and local discovery is attempted")
	argKubeConfigFile = pflag.String("kubeconfig", "", "Path to kubeconfig file with kubernetes cluster authorization and location information."+
		"If not specified, the assumption is that k8sconsole binary runs inside a kubernetes cluster and local discovery is attempted")
	argTokenTTL           = pflag.Int("token-ttl", int(authApi.DefaultTokenTTL), "Expiration time (in seconds) of JWE tokens generated by k8sconsole. Default: 15 min. 0 - never expires.")
	argAuthenticationMode = pflag.StringSlice("authentication-mode", []string{authApi.Token.String()}, "Enables authentication options that will be reflected on login screen. Supported values: basic, token. Default: token."+
		"Note that basic option should only be used if apiserver has '--authorization-mode=ABAC' and '--basic-auth-file' flags set.")
	argDisableSkip         = pflag.Bool("disable-skip", false, "When enabled, the skip button on the login page will not be shown. Default: false.")
	argEnableInsecureLogin = pflag.Bool("enable-insecure-login", false, "When enabled, k8sconsole login view will also be shown when k8sconsole is not served over HTTPS. Default: false.")
)

func main() {

}
