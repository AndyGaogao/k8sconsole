#################################################### Test  AUTH ###################################################
### Test /api/v1/login
POST http://localhost:9090/api/v1/login
Content-Type: application/json
Cache-Control: no-cache

{
  "Token": "test-token"
}

### Test /token/refresh
POST http://localhost:9090/api/v1/token/refresh
Content-Type: application/json
Cache-Control: no-cache

{
  "jweToken": "{\"protected\":\"eyJhbGciOiJSU0EtT0FFUC0yNTYiLCJlbmMiOiJBMjU2R0NNIn0\",\"aad\":\"eyJleHAiOiIyMDE4LTExLTIxVDIwOjMwOjIwKzA4OjAwIiwiaWF0IjoiMjAxOC0xMS0yMVQyMDoxNToyMCswODowMCJ9\",\"encrypted_key\":\"mjqI30nPCRsbmRg_rMQPxYw5YLRpN-bXePKJzt4Ga0yCPO2Kz3cTSXuwy5cxEdjNQaXbyZ7ztxXgVE83EeUvoN7XG9DLKsFiECH7ZsXTt_Xov2e5XoHXdUWv_pQZRJfWcSyQ2zv5uSA9LbjT2JFNYV9VxOLw6SMocU1YJxu1KwiRteGEQvZ0y9wuCDMY8UkJFrtDBCt0DaTBmLLX1jyT4PBPPbMCnujtPH7E0JNlMjmVCSOEDTQMdrC4jcVescqcGrS-T8YrKejUVRwANKOtOruzIhKYBLDIII2RgiV9redfdPRy847ydOsTHfOQ3J92OyZAYpNrZtGbMGNjsWniUw\",\"iv\":\"omP6G1AXuZ4eOcri\",\"ciphertext\":\"-HfZn6q58cFj2EEizyciOEZvCB2jLED4MvOi3FTBMllseAWt5-QYBDC-lO4\",\"tag\":\"Tg1yDcQ7GTU3sHMa4QDVzA\"}"
}

### Test /login/modes
GET http://localhost:9090/api/v1/login/modes
Accept: application/json
Cache-Control: no-cache

### Test /login/skippable
GET http://localhost:9090/api/v1/login/skippable
Accept: application/json
Cache-Control: no-cache


################################################### Test  csrfToken ################################################
### Test /api/v1/csrftoken/{action}
GET http://localhost:9090/api/v1/csrftoken/get
Content-Type: application/json
Cache-Control: no-cache

################################################### Test CRUD POD ###################################################
### Test /api/v1/pod
GET http://localhost:9090/api/v1/pod
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/pod/{namespace}
GET http://localhost:9090/api/v1/pod/kube-system
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/pod/{namespace}/{pod}
GET http://localhost:9090/api/v1/pod/kube-system/etcd-minikube
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/pod/{namespace}/{pod}/event
GET http://localhost:9090/api/v1/pod/kube-system/etcd-minikube/event
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/pod/{namespace}/{pod}/persistentvolumeclaim
GET http://localhost:9090/api/v1/pod/kube-system/etcd-minikube/event
Accept: application/json
Cache-Control: no-cache

################################################### Test CRUD Node ###################################################
### Test /api/v1/node
GET http://localhost:9090/api/v1/node
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/node/{name}
GET http://localhost:9090/api/v1/node/minikube
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/node/{name}/event
GET http://localhost:9090/api/v1/node/minikube/event
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/node/{name}/pod
GET http://localhost:9090/api/v1/node/minikube/pod?filterBy=name,kube-&sortBy=d,name&itemsPerPage=2&page=1
Accept: application/json
Cache-Control: no-cache

################################################# Test CRUD Namespace ################################################
### Test /api/v1/namespace
POST http://localhost:9090/api/v1/namespace
Content-Type: application/json
Cache-Control: no-cache

{
  "name": "test"
}

### Test /api/v1/namespace
GET http://localhost:9090/api/v1/namespace?filterBy=name,kube-
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/namespace/{name}
GET http://localhost:9090/api/v1/namespace/kube-system
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/namespace/{name}/event
GET http://localhost:9090/api/v1/namespace/kube-system/event
Accept: application/json
Cache-Control: no-cache

################################################# Test CRUD Secret ################################################
### Test /api/v1/secret
GET http://localhost:9090/api/v1/secret?itemsPerPage=2&page=1
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/secret/{namespace}
GET http://localhost:9090/api/v1/secret/default
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/secret/{namespace}/{name}
GET http://localhost:9090/api/v1/secret/default/default-token-n8tj4
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/secret
# .dockercfg format
#{
#    "docker-register-server": {
#          "username":"Your Username",
#          "password":"Your Password",
#          "email":" ",
#          "auth":"base64(Username: password)"
#        }
#}
POST http://localhost:9090/api/v1/secret
Content-Type: application/json
Cache-Control: no-cache

{
  "name": "my-register-server",
  "namespace": "default",
  "data": "base64(.dockercfg)"
}

################################################# Test CRUD ConfigMap ################################################
### Test /api/v1/configmap
GET http://localhost:9090/api/v1/configmap
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/configmap/{namespace}
GET http://localhost:9090/api/v1/configmap/kube-system
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/configmap/{namespace}/{configmap}
GET http://localhost:9090/api/v1/configmap/kube-public/cluster-info
Accept: application/json
Cache-Control: no-cache

############################################# Test CRUD Persistent Volume ############################################
### Test /api/v1/persistentvolume
GET http://localhost:9090/api/v1/persistentvolume
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/persistentvolume/{persistentvolume}
# Note. pv dont have namespace
GET http://localhost:9090/api/v1/persistentvolume/test
Accept: application/json
Cache-Control: no-cache

########################################## Test CRUD Persistent Volume Claim #########################################
### Test /api/v1/persistentvolumeclaim
GET http://localhost:9090/api/v1/persistentvolumeclaim
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/persistentvolumeclaim/{namespace}
GET http://localhost:9090/api/v1/persistentvolumeclaim/default
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/persistentvolumeclaim/{namespace}/{name}
GET http://localhost:9090/api/v1/persistentvolumeclaim/default/test
Accept: application/json
Cache-Control: no-cache

########################################## Test CRUD storageclass #########################################
### Test /api/v1/storageclass
GET http://localhost:9090/api/v1/storageclass
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/storageclass/{storageclass}
GET http://localhost:9090/api/v1/storageclass/test
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/storageclass/{storageclass}/persistentvolume
GET http://localhost:9090/api/v1/storageclass/test/persistentvolume
Accept: application/json
Cache-Control: no-cache

############################################# Test CRUD service ###########################################
### Test /api/v1/service
GET http://localhost:9090/api/v1/service
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/service/{namespace}
GET http://localhost:9090/api/v1/service/default
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/service/{namespace}/{service}

GET http://localhost:9090/api/v1/service/default/kubernetes
Accept: application/json
Cache-Control: no-cache

### Test /api/v1/service/{namespace}/{service}/pod
GET http://localhost:9090/api/v1/service/kube-system/kube-dns/pod
Accept: application/json
Cache-Control: no-cache

############################################# Test logs ###########################################
### Test /log/source/{namespace}/{resourceName}/{resourceType}
GET http://localhost:9090/api/v1/log/source/kube-system/etcd-minikube/pod
Accept: application/json
Cache-Control: no-cache

### Test /log/{namespace}/{pod}
GET http://localhost:9090/api/v1/log/kube-system/etcd-minikube
Accept: application/json
Cache-Control: no-cache

###
GET http://localhost:9090/api/v1/log/kube-system/etcd-minikube?referenceLineNum=1&offsetFrom=0&offsetTo=22&previous=true
Accept: application/json
Cache-Control: no-cache

###
GET http://localhost:9090/api/v1/log/kube-system/etcd-minikube?referenceTimestamp=2018-11-25T10:18:01.16823409Z&referenceLineNum=1&offsetFrom=1&offsetTo=3
Accept: application/json
Cache-Control: no-cache

### Test /log/{namespace}/{pod}/{container}
GET http://localhost:9090/api/v1/log/kube-system/etcd-minikube/etcd
Accept: application/json
Cache-Control: no-cache

### Test /log/file/{namespace}/{pod}/{container}
GET http://localhost:9090/api/v1/log/file/kube-system/etcd-minikube/etcd
Accept: application/json
Cache-Control: no-cache

### Test /log/file/{namespace}/{pod}/{container}
GET http://localhost:9090/api/v1/log/file/kube-system/etcd-minikube/etcd?previous=true
Accept: application/json
Cache-Control: no-cache

############################################# Test rbac ###########################################
### Test /rbac/role
GET http://localhost:9090/api/v1/rbac/role
Accept: application/json
Cache-Control: no-cache

### Test /rbac/rolebinding
GET http://localhost:9090/api/v1/rbac/rolebinding?filterBy=name,weave-net
Accept: application/json
Cache-Control: no-cache

### Test /rbac/status
GET http://localhost:9090/api/v1/rbac/status
Accept: application/json
Cache-Control: no-cache

############################################# Test cluster ###########################################
### Test /rbac/cluster
GET http://localhost:9090/api/v1/cluster
Accept: application/json
Cache-Control: no-cache

############################################# Test replicaset ###########################################
### Test /replicaset
GET http://localhost:9090/api/v1/replicaset
Accept: application/json
Cache-Control: no-cache

### Test /replicaset/{namespace}
GET http://localhost:9090/api/v1/replicaset/kube-system
Accept: application/json
Cache-Control: no-cache

### Test /replicaset/{namespace}/{replicaSet}
GET http://localhost:9090/api/v1/replicaset/kube-system/kube-dns-b4bd9576
Accept: application/json
Cache-Control: no-cache

### Test /replicaset/{namespace}//{replicaSet}/pod
GET http://localhost:9090/api/v1/replicaset/kube-system/kube-dns-b4bd9576/pod
Accept: application/json
Cache-Control: no-cache

### Test /replicaset/{namespace}//{replicaSet}/event
GET http://localhost:9090/api/v1/replicaset/kube-system/kube-dns-b4bd9576/event
Accept: application/json
Cache-Control: no-cache

############################################# Test replication controller ###########################################
### Test /replicationcontroller
GET http://localhost:9090/api/v1/replicationcontroller
Accept: application/json
Cache-Control: no-cache

### Test /replicationcontroller/{namespace}
GET http://localhost:9090/api/v1/replicationcontroller/default
Accept: application/json
Cache-Control: no-cache

### Test /replicationcontroller/{namespace}/{replicationController}
GET http://localhost:9090/api/v1/replicationcontroller/default/test
Accept: application/json
Cache-Control: no-cache

### Test /replicationcontroller/{namespace}/{replicationController}/update/pod
POST http://localhost:9090/api/v1/replicationcontroller/default/test/update/pod
Content-Type: application/json
Cache-Control: no-cache

{
  "replicas": 3
}

### Test /replicationcontroller/{namespace}/{replicationController}/pod
GET http://localhost:9090/api/v1/replicationcontroller/default/test/pod
Accept: application/json
Cache-Control: no-cache

### Test /replicationcontroller/{namespace}/{replicationController}/event
GET http://localhost:9090/api/v1/replicationcontroller/default/test/event
Accept: application/json
Cache-Control: no-cache

### Test /replicationcontroller/{namespace}/{replicationController}/service
GET http://localhost:9090/api/v1/replicationcontroller/default/test/service
Accept: application/json
Cache-Control: no-cache

############################################# Test deployment ###########################################
### Test /deployment
GET http://localhost:9090/api/v1/deployment
Accept: application/json
Cache-Control: no-cache

### Test /deployment/{namespace}
GET http://localhost:9090/api/v1/deployment/kube-system
Accept: application/json
Cache-Control: no-cache

### Test /deployment/{namespace}/{deployment}
GET http://localhost:9090/api/v1/deployment/kube-system/kube-dns
Accept: application/json
Cache-Control: no-cache

### Test /deployment/{namespace}/{deployment}/event
GET http://localhost:9090/api/v1/deployment/kube-system/kube-dns/event
Accept: application/json
Cache-Control: no-cache

### Test /deployment/{namespace}/{deployment}
GET http://localhost:9090/api/v1/deployment/kube-system/kube-dns/oldreplicaset
Accept: application/json
Cache-Control: no-cache

############################################# Test ingress ###########################################
### Test /ingress
GET http://localhost:9090/api/v1/ingress
Accept: application/json
Cache-Control: no-cache

### Test /ingress/{namespace}
GET http://localhost:9090/api/v1/ingress/default
Accept: application/json
Cache-Control: no-cache

### Test /ingress/{namespace}/{name}
GET http://localhost:9090/api/v1/ingress/default/test
Accept: application/json
Cache-Control: no-cache

############################################# Test deployment ###########################################
### Test /deploy
POST http://localhost:9090/api/v1/deploy
Content-Type: application/json
Cache-Control: no-cache

{
  "name": "foo-name",
  "namespace": "default",
  "containerImage": "nginx:latest",
  "replicas": 1,
  "portMappings": [
    {
      "port": 8080,
      "targetPort": 80,
      "protocol": "TCP"
    }
  ],
  "IsExternal": true,
  "description": "Test k8sconsole api /deploy",
  "labels": [
    {
      "key": "test-app",
      "value": "nginx"
    }
  ]
}

### Test /deployfromfile
POST http://localhost:9090/api/v1/deployfromfile
Content-Type: application/json
Cache-Control: no-cache

{
  "name": "boo-name",
  "namespace": "default",
  "content":  "apiVersion: apps/v1beta1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:latest\n        ports:\n        - containerPort: 80",
  "validate": true
}

### Test /deploy/validate/name
POST http://localhost:9090/api/v1/deploy/validate/name
Content-Type: application/json
Cache-Control: no-cache

{
  "name": "kube-dns",
  "namespace": "kube-system"
}

### Test /deploy/validate/name
POST http://localhost:9090/api/v1/deploy/validate/name
Content-Type: application/json
Cache-Control: no-cache

{
  "name": "foo-name",
  "namespace": "kube-system"
}

### Test /deploy/validate/imagereference
POST http://localhost:9090/api/v1/deploy/validate/imagereference
Content-Type: application/json
Cache-Control: no-cache

{
  "reference": "nginx:latest"
}

### Test /deploy/validate/imagereference
POST http://localhost:9090/api/v1/deploy/validate/imagereference
Content-Type: application/json
Cache-Control: no-cache

{
  "reference": "docker.io/nginx:latest:2"
}

### Test /deploy/validate/protocol
POST http://localhost:9090/api/v1/deploy/validate/protocol
Content-Type: application/json
Cache-Control: no-cache

{
  "protocol": "TCP",
  "isExternal": true
}

### Test /deploy/validate/protocol
POST http://localhost:9090/api/v1/deploy/validate/protocol
Content-Type: application/json
Cache-Control: no-cache

{
  "protocol": "UDP",
  "isExternal": true
}

### Test /deploy/validate/protocols
GET http://localhost:9090/api/v1/deploy/protocols
Accept: application/json
Cache-Control: no-cache

############################################# Test job ###########################################
### Test /job
GET http://localhost:9090/api/v1/job
Accept: application/json
Cache-Control: no-cache

### Test /job/{namespace}
GET http://localhost:9090/api/v1/job/default
Accept: application/json
Cache-Control: no-cache

### Test /job/{namespace}/{name}
GET http://localhost:9090/api/v1/job/default/test
Accept: application/json
Cache-Control: no-cache

### Test /job/{namespace}/{name}/pod
GET http://localhost:9090/api/v1/job/default/test/pod
Accept: application/json
Cache-Control: no-cache

### Test /job/{namespace}/{name}/event
GET http://localhost:9090/api/v1/job/default/test/event
Accept: application/json
Cache-Control: no-cache

############################################# Test cornjob ###########################################
### Test /cronjob
GET http://localhost:9090/api/v1/cronjob
Accept: application/json
Cache-Control: no-cache

### Test /cronjob/{namespace}
GET http://localhost:9090/api/v1/cronjob/default
Accept: application/json
Cache-Control: no-cache

### Test /cronjob/{namespace}/{name}
GET http://localhost:9090/api/v1/cronjob/default/test
Accept: application/json
Cache-Control: no-cache

### Test /cronjob/{namespace}/{name}/pod
GET http://localhost:9090/api/v1/cronjob/default/test/job
Accept: application/json
Cache-Control: no-cache

### Test /cronjob/{namespace}/{name}/event
GET http://localhost:9090/api/v1/cronjob/default/test/event
Accept: application/json
Cache-Control: no-cache

### Test /cronjob/{namespace}/{name}/trigger
PUT http://localhost:9090/api/v1/cronjob/default/test/trigger
Content-Type: application/json
Cache-Control: no-cache

############################################# Test statefulset ###########################################
### Test /statefulset
GET http://localhost:9090/api/v1/statefulset
Accept: application/json
Cache-Control: no-cache

### Test /statefulset/{namespace}
GET http://localhost:9090/api/v1/statefulset/default
Accept: application/json
Cache-Control: no-cache

### Test /statefulset/{namespace}/{statefulset}
GET http://localhost:9090/api/v1/statefulset/default/test
Accept: application/json
Cache-Control: no-cache

### Test /statefulset/{namespace}/{statefulset}/pod
GET http://localhost:9090/api/v1/statefulset/default/test/pod
Accept: application/json
Cache-Control: no-cache

### Test /statefulset/{namespace}/{statefulset}/event
GET http://localhost:9090/api/v1/statefulset/default/test/event
Accept: application/json
Cache-Control: no-cache

############################################# Test _raw ###########################################
### Test get /_raw/{kind}/namespace/{namespace}/name/{name}
GET http://localhost:9090/api/v1/_raw/pod/namespace/default/name/foo-name
Accept: application/json
Cache-Control: no-cache

### Test put /_raw/{kind}/namespace/{namespace}/name/{name}
### Must have pod foo-name first
PUT http://localhost:9090/api/v1/_raw/pod/namespace/default/name/foo-name
Content-Type: application/json
Cache-Control: no-cache

{
  "kind": "Pod",
  "apiVersion": "v1",
  "metadata": {
    "name": "foo-name",
    "namespace": "default",
    "selfLink": "/api/v1/namespaces/default/pods/foo-name",
    "uid": "ad3190ab-f3b4-11e8-a045-000c2943ba6c",
    "resourceVersion": "1515732",
    "creationTimestamp": "2018-11-29T08:56:36Z",
    "annotations": {
      "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"name\":\"foo-name\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"image\":\"nginx:latest\",\"name\":\"foo\"}]}}\n"
    },
    "labels": {
      "name": "foo-name"
    }
  },
  "spec": {
    "volumes": [
      {
        "name": "default-token-n8tj4",
        "secret": {
          "secretName": "default-token-n8tj4",
          "defaultMode": 420
        }
      }
    ],
    "containers": [
      {
        "name": "foo",
        "image": "nginx:latest",
        "resources": {},
        "volumeMounts": [
          {
            "name": "default-token-n8tj4",
            "readOnly": true,
            "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
          }
        ],
        "terminationMessagePath": "/dev/termination-log",
        "terminationMessagePolicy": "File",
        "imagePullPolicy": "Always"
      }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "serviceAccountName": "default",
    "serviceAccount": "default",
    "nodeName": "minikube",
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "tolerations": [
      {
        "key": "node.kubernetes.io/not-ready",
        "operator": "Exists",
        "effect": "NoExecute",
        "tolerationSeconds": 300
      },
      {
        "key": "node.kubernetes.io/unreachable",
        "operator": "Exists",
        "effect": "NoExecute",
        "tolerationSeconds": 300
      }
    ]
  },
  "status": {
    "phase": "Running",
    "conditions": [
      {
        "type": "Initialized",
        "status": "True",
        "lastProbeTime": null,
        "lastTransitionTime": "2018-11-29T08:56:36Z"
      },
      {
        "type": "Ready",
        "status": "True",
        "lastProbeTime": null,
        "lastTransitionTime": "2018-11-29T08:56:44Z"
      },
      {
        "type": "PodScheduled",
        "status": "True",
        "lastProbeTime": null,
        "lastTransitionTime": "2018-11-29T08:56:36Z"
      }
    ],
    "hostIP": "192.168.75.139",
    "podIP": "172.17.0.3",
    "startTime": "2018-11-29T08:56:36Z",
    "containerStatuses": [
      {
        "name": "foo",
        "state": {
          "running": {
            "startedAt": "2018-11-29T08:56:44Z"
          }
        },
        "lastState": {},
        "ready": true,
        "restartCount": 0,
        "image": "nginx:latest",
        "imageID": "docker-pullable://nginx@sha256:1026b9e9dc1b8ebc52132a97d20d330e7e667a6b1ebb603c2e0b247ef1bdca33",
        "containerID": "docker://7e193f2f7c9a9b3c7f29874f0c538a2d424781fc37af565fcc2756a98c7bb341"
      }
    ],
    "qosClass": "BestEffort"
  }
}

### Test delete /_raw/{kind}/namespace/{namespace}/name/{name}
DELETE http://localhost:9090/api/v1/_raw/pod/namespace/default/name/foo-name
Accept: application/json
Cache-Control: no-cache

### Test /_raw/{kind}/name/{name}
GET http://localhost:9090/api/v1/_raw/namespace/name/development
Accept: application/json
Cache-Control: no-cache

### Test /_raw/{kind}/name/{name}
PUT http://localhost:9090/api/v1/_raw/namespace/name/development
Content-Type: application/json
Cache-Control: no-cache

{
  "kind": "Namespace",
  "apiVersion": "v1",
  "metadata": {
    "name": "development",
    "selfLink": "/api/v1/namespaces/development",
    "uid": "853540bf-f3b6-11e8-a045-000c2943ba6c",
    "resourceVersion": "1516559",
    "creationTimestamp": "2018-11-29T09:09:47Z",
    "labels": {
      "name": "dev"
    },
    "annotations": {
      "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{},\"labels\":{\"name\":\"development\"},\"name\":\"development\",\"namespace\":\"\"}}\n"
    }
  },
  "spec": {
    "finalizers": [
      "kubernetes"
    ]
  },
  "status": {
    "phase": "Active"
  }
}
### Test /_raw/{kind}/name/{name}
DELETE http://localhost:9090/api/v1/_raw/namespace/name/development
Accept: application/json
Cache-Control: no-cache

###